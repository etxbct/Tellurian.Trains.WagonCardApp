@if (Marking is not null)
{
    @if (Marking.UseMarking)
    {
        <div class="owner-marking">
            @if (HasInventoryNumber)
            {
                <div class="inventory-number" style="background-color: @Marking.Color1; color: @Marking.Color1.TextColor()">
                    <div style="padding-top: 0.3cm">
                        @Marking.InventoryNumber
                    </div>
                </div>
            }
            else if (HasIcon)
            {
                <div style="padding-top: 0.3cm">
                    <img style="height: 0.7cm" src="@Marking.IconHref"/>
                </div>
            }
            else
            {
                <div style="padding-top: 0.3cm">
                    <span class="inventory-color" style="background-color: @Marking.Color1">&nbsp;</span>
                    <span class="inventory-color" style="background-color: @Marking.Color2">&nbsp;</span>
                    <span class="inventory-color" style="background-color: @Marking.Color3">&nbsp;</span>
                </div>
            }
        </div>
    }
}

@code {
    [Parameter] public Marking? Marking { get; set; }

    bool HasInventoryNumber => !string.IsNullOrWhiteSpace(Marking?.InventoryNumber);
    bool HasIcon => Marking?.IconHref?.Length > 10;
    bool HasColor(string? color) => !string.IsNullOrWhiteSpace(color) && !color.Equals("#ffffff", StringComparison.OrdinalIgnoreCase);
}
